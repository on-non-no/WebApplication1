// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestAPP.Data;

#nullable disable

namespace TestAPP.Data.Migrations
{
    [DbContext(typeof(TestDataContext))]
    [Migration("20240304034009_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("TestAPP.Data.계정권한", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("권한분류")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("사용자Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("사용자Id");

                    b.ToTable("계정권한들");
                });

            modelBuilder.Entity("TestAPP.Data.사용자", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("비밀번호")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("생년월일")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("소속")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("아이디")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("이름")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("이메일")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("전화번호")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("사용자들");
                });

            modelBuilder.Entity("TestAPP.Data.계정권한", b =>
                {
                    b.HasOne("TestAPP.Data.사용자", null)
                        .WithMany("계정권한들")
                        .HasForeignKey("사용자Id");
                });

            modelBuilder.Entity("TestAPP.Data.사용자", b =>
                {
                    b.Navigation("계정권한들");
                });
#pragma warning restore 612, 618
        }
    }
}
